name: Release

on:
  push:
  # we need the preview tarball for deploy tests
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  TURBO_VERSION: 2.5.5
  NODE_LTS_VERSION: 20
  BUN_VERSION: 1.2.20
  IS_RELEASE: 'false'

jobs:
  changes:
    name: Determine changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: check for release
        id: is-release
        run: |
          RELEASE_CHECK=$(bun run ./scripts/release/check-is-release.ts 2> /dev/null || :)
          if [[ $RELEASE_CHECK == "new-release" || $RELEASE_CHECK == v* ]];
            then
              echo "IS_RELEASE=true" >> $GITHUB_ENV
            else
              echo "IS_RELEASE=false" >> $GITHUB_ENV
          fi

  build:
    runs-on: ubuntu-latest
    needs:
      - changes
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true
      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - run: bun install
      - run: bun run build

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

  publish:
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs:
      - changes
      - build
    permissions:
      contents: write
      id-token: write
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true
      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          # Cache includes repo checkout which is required for later scripts
          fail-on-cache-miss: true
          key: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            ${{ github.sha }}-${{ github.run_number }}
            ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

      - run: bun install -g npm@latest
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Publish to NPM
        if: ${{ env.IS_RELEASE == 'true' }}
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}

      - name: Upload npm log artifact
        if: steps.changesets.outputs.published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: npm-publish-logs
          path: /home/runner/.npm/_logs/*